
(define-enum-sort LightStatus (On Off))

; Guarded-transitions-style definition
(define-system TimedSwitch 
  :input ((press Bool)) 
  :output ((sig Bool))
  :local ((s LightStatus) (n Int))
  :inv (= sig (= s On))
  :init (and
          (= n 0)
          (ite press (= s On) (= s Off))
        )
  :trans (and
          (=> (and (= s Off) (not press'))
          (and (= s' Off) (= n' n))
          (=> (and (= s Off) press')
          (and (= s' On) (= n' n)))
          (=> (and (= s On) (not press') (< 10 n))
          (and (= s' On) (= n' (+ n 1))))
          (=> (and (= s On) (or press' (>= n 10))) ; NOTE: The slides example is missin a `)` here
          (and (= s' Off) (= n' 0)))
        ))
)

; check system not part of the slides example
(check-system TimedSwitch
  :input ((press Bool)) 
  :output ((sig Bool))
  :local ((s LightStatus) (n Int))
  :reachable (r1 (and (press) (not sig) (= s Off)))
  :query (p1 (r1))
)